{"version":3,"sources":["webpack:///./src/components/profile/EditPersonalInfo.vue?35e6","webpack:///src/components/profile/EditPersonalInfo.vue","webpack:///./src/components/profile/EditPersonalInfo.vue?b91d","webpack:///./src/components/profile/EditPersonalInfo.vue?9c3a","webpack:///./src/components/profile/EditPersonalInfo.vue?2542","webpack:///./src/components/utils/mixins/ResourceMixin.vue","webpack:///src/components/utils/mixins/ResourceMixin.vue","webpack:///./src/components/utils/mixins/ResourceMixin.vue?645b"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","attrs","on","setModal","nativeOn","$event","type","indexOf","_k","keyCode","key","preventDefault","saveForm","staticClass","slot","_v","_s","title","hideModal","formFields","length","staticStyle","_l","field","index","userEditable","_e","required","$t","name","scopedSlots","_u","fn","validationContext","getValidationState","model","value","callback","$$v","$set","trim","expression","errors","$root","userStore","state","internalUser","staticRenderFns","mixins","ResourceMixin","components","props","schema","profile","autoOpen","default","data","originalFormFields","mounted","methods","generateFormFields","filteredOrder","_","properties","policyFields","idmInstance","policyResult","detail","failedPolicyRequirements","tempDisplayErrors","component","generateUpdatePatch","o","n","changes","newForm","operation","findPolicyError","errorResponse","foundProperty","params","displayTitle","error","exists","msg","generateSearch","filter","displayFields","schemaProps","filterUrl"],"mappings":"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","file":"js/chunk-587ca685.4dac6ab7.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-modal',{ref:\"fsModal\",attrs:{\"id\":\"userDetailsModal\",\"modal-class\":\"fr-full-screen\",\"cancel-variant\":\"outline-secondary\"},on:{\"show\":_vm.setModal},nativeOn:{\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }$event.preventDefault();return _vm.saveForm($event)}}},[_c('div',{staticClass:\"d-flex w-100 h-100\",attrs:{\"slot\":\"modal-header\"},slot:\"modal-header\"},[_c('h5',{staticClass:\"modal-title align-self-center text-center\"},[_vm._v(_vm._s(_vm.title))]),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"aria-label\":\"Close\"},on:{\"click\":_vm.hideModal}},[_c('i',{staticClass:\"fa fa-times\"})])]),_c('b-container',[_c('b-row',[_c('b-col',{attrs:{\"sm\":\"8\",\"offset-sm\":\"2\"}},[_c('ValidationObserver',{ref:\"observer\",attrs:{\"slim\":\"\"}},[(_vm.formFields.length > 0)?_c('b-form',{staticClass:\"mb-3 fr-edit-personal-form\",staticStyle:{\"flex-direction\":\"column\"},attrs:{\"name\":\"edit-personal-form\"}},[_vm._l((_vm.formFields),function(field,index){return [((field.type === 'string' || field.type === 'number') && field.userEditable)?_c('b-form-group',{key:index,staticStyle:{\"min-width\":\"200px\"}},[_c('label',{attrs:{\"for\":field.title}},[_vm._v(_vm._s(field.title))]),(!field.required)?_c('small',{staticClass:\"text-muted ml-1\"},[_vm._v(_vm._s(_vm.$t('pages.profile.editProfile.optional')))]):_vm._e(),_c('ValidationProvider',{attrs:{\"rules\":(\"\" + (field.required ? 'required' : '')),\"name\":field.name},scopedSlots:_vm._u([{key:\"default\",fn:function(validationContext){return [_c('b-input',{attrs:{\"name\":field.name,\"type\":field.type === 'string' ? 'text' : field.type,\"state\":_vm.getValidationState(validationContext)},model:{value:(_vm.formFields[index].value),callback:function ($$v) {_vm.$set(_vm.formFields[index], \"value\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"formFields[index].value\"}}),_c('b-form-invalid-feedback',[_vm._v(_vm._s(validationContext.errors[0]))])]}}],null,true)})],1):_vm._e(),(field.type === 'boolean')?_c('b-form-group',{key:index},[_c('div',{staticClass:\"d-flex flex-column\"},[_c('label',{staticClass:\"mr-auto\",attrs:{\"for\":field.title}},[_vm._v(_vm._s(field.title))]),_c('b-form-checkbox',{staticClass:\"fr-toggle-primary\",attrs:{\"switch\":\"\",\"size\":\"lg\"},model:{value:(_vm.formFields[index].value),callback:function ($$v) {_vm.$set(_vm.formFields[index], \"value\", $$v)},expression:\"formFields[index].value\"}},[_vm._v(\" \"+_vm._s(_vm.formFields[index].value ? _vm.$t('common.form.yes') : _vm.$t('common.form.no'))+\" \")])],1)]):_vm._e()]})],2):[_c('h3',{staticClass:\"text-center\"},[_vm._v(_vm._s(_vm.$t('pages.profile.editProfile.noFields')))])]],2)],1)],1)],1),_c('div',{staticClass:\"w-100\",attrs:{\"slot\":\"modal-footer\"},slot:\"modal-footer\"},[_c('div',{staticClass:\"float-right\"},[_c('b-btn',{attrs:{\"variant\":\"outline-secondary mr-2\"},on:{\"click\":_vm.hideModal}},[_vm._v(_vm._s(_vm.$t('common.form.cancel')))]),_c('b-btn',{attrs:{\"type\":\"button\",\"variant\":\"primary\",\"disabled\":_vm.$root.userStore.state.internalUser},on:{\"click\":_vm.saveForm}},[_vm._v(_vm._s(_vm.$t('common.form.saveChanges')))])],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\nCopyright (c) 2020 ForgeRock. All rights reserved.\n\nThis software may be modified and distributed under the terms\nof the MIT license. See the LICENSE file for details.\n-->\n\n<template>\n    <b-modal id=\"userDetailsModal\" modal-class=\"fr-full-screen\" ref=\"fsModal\" cancel-variant=\"outline-secondary\" @show=\"setModal\" @keydown.enter.native.prevent=\"saveForm\">\n\n        <div slot=\"modal-header\" class=\"d-flex w-100 h-100\">\n            <h5 class=\"modal-title align-self-center text-center\">{{title}}</h5>\n            <button type=\"button\" aria-label=\"Close\" class=\"close\" @click=\"hideModal\"><i class=\"fa fa-times\"></i></button>\n        </div>\n        <!-- Editing profile currently only supports String, Number and Boolean-->\n        <b-container>\n            <b-row>\n                <b-col sm=\"8\" offset-sm=\"2\">\n                    <ValidationObserver ref=\"observer\" slim>\n                        <b-form style=\"flex-direction: column;\" v-if=\"formFields.length > 0\" class=\"mb-3 fr-edit-personal-form\" name=\"edit-personal-form\">\n                        <template v-for=\"(field, index) in formFields\">\n                                <b-form-group style=\"min-width: 200px;\" :key=\"index\" v-if=\"(field.type === 'string' || field.type === 'number') && field.userEditable\">\n                                    <label :for=\"field.title\">{{field.title}}</label>\n                                    <small v-if=\"!field.required\" class=\"text-muted ml-1\">{{$t('pages.profile.editProfile.optional')}}</small>\n                                    <ValidationProvider :rules=\"`${field.required ? 'required' : ''}`\"  :name=\"field.name\" v-slot=\"validationContext\">\n                                        <b-input\n                                            :name=\"field.name\"\n                                            :type=\"field.type === 'string' ? 'text' : field.type\"\n                                            :state=\"getValidationState(validationContext)\"\n                                            v-model.trim=\"formFields[index].value\" />\n                                        <b-form-invalid-feedback>{{ validationContext.errors[0] }}</b-form-invalid-feedback>\n                                    </ValidationProvider>\n                                </b-form-group>\n\n                                <!-- for boolean values -->\n                                <b-form-group :key=\"index\" v-if=\"field.type === 'boolean'\">\n                                    <div class=\"d-flex flex-column\">\n                                        <label class=\"mr-auto\" :for=\"field.title\">{{field.title}}</label>\n                                        <b-form-checkbox\n                                            switch\n                                            size=\"lg\"\n                                            class=\"fr-toggle-primary\"\n                                            v-model=\"formFields[index].value\">\n                                            {{ formFields[index].value ? $t('common.form.yes') : $t('common.form.no') }}\n                                        </b-form-checkbox>\n                                    </div>\n                                </b-form-group>\n                            </template>\n                        </b-form>\n                        <template v-else>\n                            <h3 class=\"text-center\">{{$t('pages.profile.editProfile.noFields')}}</h3>\n                        </template>\n                    </ValidationObserver>\n                </b-col>\n            </b-row>\n        </b-container>\n\n        <div slot=\"modal-footer\" class=\"w-100\">\n            <div class=\"float-right\">\n                <b-btn variant=\"outline-secondary mr-2\" @click=\"hideModal\">{{$t('common.form.cancel')}}</b-btn>\n                <b-btn type=\"button\" variant=\"primary\" :disabled=\"$root.userStore.state.internalUser\" @click=\"saveForm\">{{$t('common.form.saveChanges')}}</b-btn>\n            </div>\n        </div>\n    </b-modal>\n</template>\n\n<script>\nimport _ from 'lodash';\nimport ResourceMixin from '@/components/utils/mixins/ResourceMixin';\n\n/**\n * @description Displays a users profile, auto generates fields based off of resource schema. Currently only displays strings, numbers and booleans. In the case of a policy\n * save error it will highlight the appropriate field and display a policy error. For custom profile changes (e.g. adding a dropdown) this would be the primary file to add these\n * adjustments.\n *\n */\nexport default {\n    name: 'Edit-Personal-Info',\n    mixins: [\n        ResourceMixin\n    ],\n    components: {},\n    props: {\n        schema: { type: Object, required: true },\n        profile: { type: Object, required: true },\n        autoOpen: { type: Boolean, required: false, default: false }\n    },\n    data () {\n        return {\n            formFields: [],\n            originalFormFields: [],\n            title: this.$t('pages.profile.editProfile.userDetailsTitle')\n        };\n    },\n    mounted () {\n        if (this.autoOpen) {\n            this.$root.$emit('bv::show::modal', 'userDetailsModal');\n        }\n    },\n    methods: {\n        generateFormFields () {\n            let { order, properties, required } = this.schema,\n                filteredOrder = _.filter(order, (propName) => {\n                    return properties[propName].viewable &&\n                            properties[propName].type !== 'array' &&\n                            properties[propName].type !== 'object';\n                }),\n                formFields = _.map(filteredOrder, (name) => {\n                    return {\n                        name: name,\n                        key: name,\n                        title: properties[name].title,\n                        userEditable: properties[name].userEditable,\n                        value: this.profile[name] || null,\n                        type: properties[name].type,\n                        required: _.includes(required, name)\n                    };\n                });\n\n            return formFields;\n        },\n        hideModal () {\n            this.$refs.fsModal.hide();\n        },\n        setModal () {\n            let formFields = this.generateFormFields();\n\n            this.formFields = formFields;\n            this.originalFormFields = _.cloneDeep(formFields);\n        },\n        saveForm () {\n            /* istanbul ignore next */\n            this.$refs.observer.validate().then((valid) => {\n                if (valid) {\n                    const idmInstance = this.getRequestService();\n                    let policyFields = {};\n\n                    _.each(this.formFields, (field) => {\n                        if (field.value !== null) {\n                            policyFields[field.name] = field.value;\n                        }\n                    });\n\n                    idmInstance.post(`policy/${this.$root.userStore.state.managedResource}/${this.$root.userStore.state.userId}?_action=validateObject`, policyFields).then((policyResult) => {\n                        // reject any failedPolicyRequirements on properties that don't exist in this.formFields\n                        policyResult.data.failedPolicyRequirements = _.remove(policyResult.data.failedPolicyRequirements, (policy) => !_.map(this.formFields, 'name').includes(policy.property));\n\n                        if (policyResult.data.failedPolicyRequirements.length === 0) {\n                            this.$emit('updateProfile', this.generateUpdatePatch(this.originalFormFields, this.formFields));\n                            this.$refs.observer.reset();\n                            this.hideModal();\n                        } else {\n                            let generatedErrors = this.findPolicyError({\n                                data: {\n                                    detail: {\n                                        failedPolicyRequirements: policyResult.data.failedPolicyRequirements\n                                    }\n                                }\n                            }, this.formFields);\n\n                            if (generatedErrors.length > 0) {\n                                let tempDisplayErrors = {};\n\n                                _.each(generatedErrors, (generatedError) => {\n                                    if (generatedError.exists) {\n                                        if (tempDisplayErrors[generatedError.field] !== undefined) {\n                                            tempDisplayErrors[generatedError.field].push(generatedError.msg);\n                                        } else {\n                                            tempDisplayErrors[generatedError.field] = [generatedError.msg];\n                                        }\n                                    }\n                                });\n                                this.$refs.observer.setErrors(tempDisplayErrors);\n                            } else {\n                                this.displayNotification('error', this.$t('pages.profile.editProfile.failedProfileSave'));\n                            }\n                        }\n                    });\n                }\n            });\n        }\n    }\n};\n</script>\n\n<style lang=\"scss\">\n    @import '../../scss/full-screen-modal';\n\n    _:-ms-fullscreen, :root {\n        #userDetailsModal {\n            .row {\n                min-width: 900px;\n            }\n            .fr-edit-personal-form {\n                min-width: 900px;\n            }\n        }\n    }\n\n    @media only screen and (max-width: 700px) {\n        _:-ms-fullscreen, :root {\n            #userDetailsModal {\n                .row {\n                    min-width: 200px;\n                }\n                .fr-edit-personal-form {\n                    min-width: 200px;\n                }\n            }\n        }\n\n    }\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditPersonalInfo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditPersonalInfo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EditPersonalInfo.vue?vue&type=template&id=597a7088&\"\nimport script from \"./EditPersonalInfo.vue?vue&type=script&lang=js&\"\nexport * from \"./EditPersonalInfo.vue?vue&type=script&lang=js&\"\nimport style0 from \"./EditPersonalInfo.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditPersonalInfo.vue?vue&type=style&index=0&lang=scss&\"","var render, staticRenderFns\nimport script from \"./ResourceMixin.vue?vue&type=script&lang=js&\"\nexport * from \"./ResourceMixin.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<!--\nCopyright (c) 2020-2021 ForgeRock. All rights reserved.\n\nThis software may be modified and distributed under the terms\nof the MIT license. See the LICENSE file for details.\n-->\n\n<script>\nimport _ from 'lodash';\n\n/**\n * @description Resource management mixin used for generating an update patch and  handling policy errors\n *\n **/\nexport default {\n    name: 'Resource-Mixin',\n    methods: {\n        generateUpdatePatch (o, n) {\n            let originalForm = _.cloneDeep(o),\n                newForm = _.cloneDeep(n),\n                changes;\n\n            if (_.isArray(newForm)) {\n                changes = _.filter(newForm, (field, index) => {\n                    if (field.value !== originalForm[index].value) {\n                        return true;\n                    }\n                    return false;\n                });\n            } else {\n                changes = [];\n\n                _.each(newForm, (value, key) => {\n                    if (!_.isEqual(originalForm[key], newForm[key])) {\n                        changes.push({\n                            value: newForm[key],\n                            name: key\n                        });\n                    }\n                });\n            }\n\n            return _.map(changes, (formField) => {\n                if (formField.value === '' || formField.value === null) {\n                    return { operation: 'remove', field: '/' + formField.name };\n                } else {\n                    return { operation: 'add', field: '/' + formField.name, value: formField.value };\n                }\n            });\n        },\n\n        findPolicyError (errorResponse, properties) {\n            let error = [];\n\n            if (_.has(errorResponse, 'data.detail.failedPolicyRequirements')) {\n                _.each(errorResponse.data.detail.failedPolicyRequirements, (policy) => {\n                    if (policy.policyRequirements.length > 0) {\n                        let displayTitle = '',\n                            foundProperty = _.find(properties, (prop) => { return prop.key === policy.property; }),\n                            params = policy.policyRequirements[0].params || {};\n\n                        if (foundProperty) {\n                            if (foundProperty.title) {\n                                displayTitle = foundProperty.title;\n                            } else {\n                                displayTitle = foundProperty.key;\n                            }\n\n                            params.property = displayTitle;\n                        }\n\n                        error.push({\n                            exists: displayTitle.length > 0,\n                            field: policy.property,\n                            msg: this.$t(`common.policyValidationMessages.${policy.policyRequirements[0].policyRequirement}`, params)\n                        });\n                    }\n                });\n            }\n\n            return error;\n        },\n        /**\n         * Builds API URL using value in search box\n         *\n         * @param {string} filterString - Required current value of search box\n         * @param {array} displayFields - Required array of field names that we want to query on\n         * @param {object} schemaProps - Required metadata of current schema\n         */\n        generateSearch (filter, displayFields, schemaProps) {\n            let filterUrl = '';\n\n            if (filter.length > 0) {\n                filter = encodeURIComponent(filter);\n                _.each(displayFields, (field, index) => {\n                    let type = 'string';\n\n                    if (!_.isUndefined(schemaProps)) {\n                        type = schemaProps[field].type;\n                    }\n\n                    if (type === 'number' && !_.isNaN(_.toNumber(filter))) {\n                        // Search based on number and proper number value\n                        if ((index + 1) < displayFields.length) {\n                            filterUrl = `${filterUrl}${field}+eq+ ${filter}+OR+`;\n                        } else {\n                            filterUrl = `${filterUrl}${field}+eq+ ${filter}`;\n                        }\n                    } else if (type === 'boolean' && (filter === 'true' || filter === 'false')) {\n                        // Search based on boolean and proper boolean true/false\n                        if ((index + 1) < displayFields.length) {\n                            filterUrl = `${filterUrl}${field}+eq+ ${filter}+OR+`;\n                        } else {\n                            filterUrl = `${filterUrl}${field}+eq+ ${filter}`;\n                        }\n                    } else {\n                        // Fallback to general string search if all other criteria fails\n                        if ((index + 1) < displayFields.length) {\n                            filterUrl = `${filterUrl}${field}+sw+\"${filter}\"+OR+`;\n                        } else {\n                            filterUrl = `${filterUrl}${field}+sw+\"${filter}\"`;\n                        }\n                    }\n                });\n            } else {\n                filterUrl = 'true';\n            }\n\n            return filterUrl;\n        }\n    }\n};\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ResourceMixin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ResourceMixin.vue?vue&type=script&lang=js&\""],"sourceRoot":""}